syntax = "proto3";

package node;

import "script_package.proto";

service Node {
    rpc OpenChannel(OpenChannelRequest) returns (OpenChannelResponse) {}
  
    rpc Pay(PayRequest) returns (PayResponse) {}
  
    rpc SendOffLineTx(SendOffLineTxRequest) returns (SendOffLineTxResponse) {}

    rpc Connect(ConnectRequest) returns (ConnectResponse) {}

    rpc Deposit(DepositRequest) returns (DepositResponse) {}

    rpc Withdraw(WithdrawRequest) returns (WithdrawResponse) {}

    rpc ChannelBalance(ChannelBalanceRequest) returns (ChannelBalanceResponse) {}

    rpc InstallChannelScriptPackage(InstallChannelScriptPackageRequest) returns (InstallChannelScriptPackageResponse) {}

    rpc DeployModule(DeployModuleRequest) returns (DeployModuleResponse){}
}
  
message OpenChannelRequest {
    bytes remote_addr=1;
    uint64 local_amount=2;
    uint64 remote_amount=3;
}

message OpenChannelResponse {

}

message DepositRequest {
    bytes remote_addr=1;
    uint64 local_amount=2;
    uint64 remote_amount=3;
}

message DepositResponse {

}

message WithdrawRequest {
    bytes remote_addr=1;
    uint64 local_amount=2;
    uint64 remote_amount=3;
}

message WithdrawResponse {

}

message ConnectRequest {
    bytes remote_addr=1;
    string remote_ip = 2;
}

message ConnectResponse {

}

message PayRequest {
    bytes remote_addr=1;
    uint64 amount=2;
}

message PayResponse {

}

message SendOffLineTxRequest{

}

message SendOffLineTxResponse {

}

message ChannelBalanceRequest{
    bytes remote_addr=1;
}

message ChannelBalanceResponse{
        uint64 balance=1;        
}

message InstallChannelScriptPackageRequest{
    star_types.ChannelScriptPackage channel_script_package=1;
}

message InstallChannelScriptPackageResponse{

}

message DeployModuleRequest{
    bytes module_bytes=1;
}

message DeployModuleResponse{
}