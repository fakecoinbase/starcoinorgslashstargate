// Code generated by protoc-gen-go. DO NOT EDIT.
// source: channel_transaction.proto

package sgtypes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	types "starcoin/types"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ChannelOpType int32

const (
	ChannelOpType_Open    ChannelOpType = 0
	ChannelOpType_Execute ChannelOpType = 1
	ChannelOpType_Action  ChannelOpType = 2
	ChannelOpType_Close   ChannelOpType = 3
)

var ChannelOpType_name = map[int32]string{
	0: "Open",
	1: "Execute",
	2: "Action",
	3: "Close",
}

var ChannelOpType_value = map[string]int32{
	"Open":    0,
	"Execute": 1,
	"Action":  2,
	"Close":   3,
}

func (x ChannelOpType) String() string {
	return proto.EnumName(ChannelOpType_name, int32(x))
}

func (ChannelOpType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c51a1b4f26ac2713, []int{0}
}

type ChannelTransactionRequest struct {
	Proposal             *ChannelTransactionProposal `protobuf:"bytes,1,opt,name=proposal,proto3" json:"proposal,omitempty"`
	ChannelTxnSigs       *ChannelTransactionSigs     `protobuf:"bytes,2,opt,name=channel_txn_sigs,json=channelTxnSigs,proto3" json:"channel_txn_sigs,omitempty"`
	Travel               bool                        `protobuf:"varint,3,opt,name=travel,proto3" json:"travel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ChannelTransactionRequest) Reset()         { *m = ChannelTransactionRequest{} }
func (m *ChannelTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*ChannelTransactionRequest) ProtoMessage()    {}
func (*ChannelTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c51a1b4f26ac2713, []int{0}
}

func (m *ChannelTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelTransactionRequest.Unmarshal(m, b)
}
func (m *ChannelTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelTransactionRequest.Marshal(b, m, deterministic)
}
func (m *ChannelTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelTransactionRequest.Merge(m, src)
}
func (m *ChannelTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_ChannelTransactionRequest.Size(m)
}
func (m *ChannelTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelTransactionRequest proto.InternalMessageInfo

func (m *ChannelTransactionRequest) GetProposal() *ChannelTransactionProposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

func (m *ChannelTransactionRequest) GetChannelTxnSigs() *ChannelTransactionSigs {
	if m != nil {
		return m.ChannelTxnSigs
	}
	return nil
}

func (m *ChannelTransactionRequest) GetTravel() bool {
	if m != nil {
		return m.Travel
	}
	return false
}

type ChannelTransactionResponse struct {
	Proposal             *ChannelTransactionProposal `protobuf:"bytes,1,opt,name=proposal,proto3" json:"proposal,omitempty"`
	ChannelTxnSigs       *ChannelTransactionSigs     `protobuf:"bytes,2,opt,name=channel_txn_sigs,json=channelTxnSigs,proto3" json:"channel_txn_sigs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ChannelTransactionResponse) Reset()         { *m = ChannelTransactionResponse{} }
func (m *ChannelTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*ChannelTransactionResponse) ProtoMessage()    {}
func (*ChannelTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c51a1b4f26ac2713, []int{1}
}

func (m *ChannelTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelTransactionResponse.Unmarshal(m, b)
}
func (m *ChannelTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelTransactionResponse.Marshal(b, m, deterministic)
}
func (m *ChannelTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelTransactionResponse.Merge(m, src)
}
func (m *ChannelTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_ChannelTransactionResponse.Size(m)
}
func (m *ChannelTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelTransactionResponse proto.InternalMessageInfo

func (m *ChannelTransactionResponse) GetProposal() *ChannelTransactionProposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

func (m *ChannelTransactionResponse) GetChannelTxnSigs() *ChannelTransactionSigs {
	if m != nil {
		return m.ChannelTxnSigs
	}
	return nil
}

type ChannelTransactionSigs struct {
	Address                      []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PublicKey                    []byte   `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	ChannelPayloadSignature      []byte   `protobuf:"bytes,3,opt,name=channel_payload_signature,json=channelPayloadSignature,proto3" json:"channel_payload_signature,omitempty"`
	WitnessDataHash              []byte   `protobuf:"bytes,4,opt,name=witness_data_hash,json=witnessDataHash,proto3" json:"witness_data_hash,omitempty"`
	WitnessDataSignature         []byte   `protobuf:"bytes,5,opt,name=witness_data_signature,json=witnessDataSignature,proto3" json:"witness_data_signature,omitempty"`
	TravelOutputWitnessSignature []byte   `protobuf:"bytes,6,opt,name=travel_output_witness_signature,json=travelOutputWitnessSignature,proto3" json:"travel_output_witness_signature,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *ChannelTransactionSigs) Reset()         { *m = ChannelTransactionSigs{} }
func (m *ChannelTransactionSigs) String() string { return proto.CompactTextString(m) }
func (*ChannelTransactionSigs) ProtoMessage()    {}
func (*ChannelTransactionSigs) Descriptor() ([]byte, []int) {
	return fileDescriptor_c51a1b4f26ac2713, []int{2}
}

func (m *ChannelTransactionSigs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelTransactionSigs.Unmarshal(m, b)
}
func (m *ChannelTransactionSigs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelTransactionSigs.Marshal(b, m, deterministic)
}
func (m *ChannelTransactionSigs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelTransactionSigs.Merge(m, src)
}
func (m *ChannelTransactionSigs) XXX_Size() int {
	return xxx_messageInfo_ChannelTransactionSigs.Size(m)
}
func (m *ChannelTransactionSigs) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelTransactionSigs.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelTransactionSigs proto.InternalMessageInfo

func (m *ChannelTransactionSigs) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *ChannelTransactionSigs) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *ChannelTransactionSigs) GetChannelPayloadSignature() []byte {
	if m != nil {
		return m.ChannelPayloadSignature
	}
	return nil
}

func (m *ChannelTransactionSigs) GetWitnessDataHash() []byte {
	if m != nil {
		return m.WitnessDataHash
	}
	return nil
}

func (m *ChannelTransactionSigs) GetWitnessDataSignature() []byte {
	if m != nil {
		return m.WitnessDataSignature
	}
	return nil
}

func (m *ChannelTransactionSigs) GetTravelOutputWitnessSignature() []byte {
	if m != nil {
		return m.TravelOutputWitnessSignature
	}
	return nil
}

type SignedChannelTransaction struct {
	RawTx                *ChannelTransaction       `protobuf:"bytes,1,opt,name=raw_tx,json=rawTx,proto3" json:"raw_tx,omitempty"`
	Signers              [][]byte                  `protobuf:"bytes,2,rep,name=signers,proto3" json:"signers,omitempty"`
	Signatures           []*ChannelTransactionSigs `protobuf:"bytes,3,rep,name=signatures,proto3" json:"signatures,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SignedChannelTransaction) Reset()         { *m = SignedChannelTransaction{} }
func (m *SignedChannelTransaction) String() string { return proto.CompactTextString(m) }
func (*SignedChannelTransaction) ProtoMessage()    {}
func (*SignedChannelTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_c51a1b4f26ac2713, []int{3}
}

func (m *SignedChannelTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedChannelTransaction.Unmarshal(m, b)
}
func (m *SignedChannelTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedChannelTransaction.Marshal(b, m, deterministic)
}
func (m *SignedChannelTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedChannelTransaction.Merge(m, src)
}
func (m *SignedChannelTransaction) XXX_Size() int {
	return xxx_messageInfo_SignedChannelTransaction.Size(m)
}
func (m *SignedChannelTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedChannelTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_SignedChannelTransaction proto.InternalMessageInfo

func (m *SignedChannelTransaction) GetRawTx() *ChannelTransaction {
	if m != nil {
		return m.RawTx
	}
	return nil
}

func (m *SignedChannelTransaction) GetSigners() [][]byte {
	if m != nil {
		return m.Signers
	}
	return nil
}

func (m *SignedChannelTransaction) GetSignatures() []*ChannelTransactionSigs {
	if m != nil {
		return m.Signatures
	}
	return nil
}

type ChannelTransactionProposal struct {
	ChannelTxn           *ChannelTransaction `protobuf:"bytes,1,opt,name=channel_txn,json=channelTxn,proto3" json:"channel_txn,omitempty"`
	ProposerPublicKey    []byte              `protobuf:"bytes,2,opt,name=proposer_public_key,json=proposerPublicKey,proto3" json:"proposer_public_key,omitempty"`
	ProposerSignature    []byte              `protobuf:"bytes,3,opt,name=proposer_signature,json=proposerSignature,proto3" json:"proposer_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ChannelTransactionProposal) Reset()         { *m = ChannelTransactionProposal{} }
func (m *ChannelTransactionProposal) String() string { return proto.CompactTextString(m) }
func (*ChannelTransactionProposal) ProtoMessage()    {}
func (*ChannelTransactionProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_c51a1b4f26ac2713, []int{4}
}

func (m *ChannelTransactionProposal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelTransactionProposal.Unmarshal(m, b)
}
func (m *ChannelTransactionProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelTransactionProposal.Marshal(b, m, deterministic)
}
func (m *ChannelTransactionProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelTransactionProposal.Merge(m, src)
}
func (m *ChannelTransactionProposal) XXX_Size() int {
	return xxx_messageInfo_ChannelTransactionProposal.Size(m)
}
func (m *ChannelTransactionProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelTransactionProposal.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelTransactionProposal proto.InternalMessageInfo

func (m *ChannelTransactionProposal) GetChannelTxn() *ChannelTransaction {
	if m != nil {
		return m.ChannelTxn
	}
	return nil
}

func (m *ChannelTransactionProposal) GetProposerPublicKey() []byte {
	if m != nil {
		return m.ProposerPublicKey
	}
	return nil
}

func (m *ChannelTransactionProposal) GetProposerSignature() []byte {
	if m != nil {
		return m.ProposerSignature
	}
	return nil
}

type ChannelTransaction struct {
	Version               uint64                 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	ChannelAddress        []byte                 `protobuf:"bytes,2,opt,name=channel_address,json=channelAddress,proto3" json:"channel_address,omitempty"`
	ChannelSequenceNumber uint64                 `protobuf:"varint,3,opt,name=channel_sequence_number,json=channelSequenceNumber,proto3" json:"channel_sequence_number,omitempty"`
	Operator              *ChannelOp             `protobuf:"bytes,4,opt,name=operator,proto3" json:"operator,omitempty"`
	Args                  []*types.TransactionArgument `protobuf:"bytes,5,rep,name=args,proto3" json:"args,omitempty"`
	Proposer              []byte                 `protobuf:"bytes,6,opt,name=proposer,proto3" json:"proposer,omitempty"`
	SequenceNumber        uint64                 `protobuf:"varint,7,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	ExpirationTime        uint64                 `protobuf:"varint,8,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}               `json:"-"`
	XXX_unrecognized      []byte                 `json:"-"`
	XXX_sizecache         int32                  `json:"-"`
}

func (m *ChannelTransaction) Reset()         { *m = ChannelTransaction{} }
func (m *ChannelTransaction) String() string { return proto.CompactTextString(m) }
func (*ChannelTransaction) ProtoMessage()    {}
func (*ChannelTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_c51a1b4f26ac2713, []int{5}
}

func (m *ChannelTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelTransaction.Unmarshal(m, b)
}
func (m *ChannelTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelTransaction.Marshal(b, m, deterministic)
}
func (m *ChannelTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelTransaction.Merge(m, src)
}
func (m *ChannelTransaction) XXX_Size() int {
	return xxx_messageInfo_ChannelTransaction.Size(m)
}
func (m *ChannelTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelTransaction proto.InternalMessageInfo

func (m *ChannelTransaction) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ChannelTransaction) GetChannelAddress() []byte {
	if m != nil {
		return m.ChannelAddress
	}
	return nil
}

func (m *ChannelTransaction) GetChannelSequenceNumber() uint64 {
	if m != nil {
		return m.ChannelSequenceNumber
	}
	return 0
}

func (m *ChannelTransaction) GetOperator() *ChannelOp {
	if m != nil {
		return m.Operator
	}
	return nil
}

func (m *ChannelTransaction) GetArgs() []*types.TransactionArgument {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *ChannelTransaction) GetProposer() []byte {
	if m != nil {
		return m.Proposer
	}
	return nil
}

func (m *ChannelTransaction) GetSequenceNumber() uint64 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *ChannelTransaction) GetExpirationTime() uint64 {
	if m != nil {
		return m.ExpirationTime
	}
	return 0
}

type ChannelOp struct {
	OpType ChannelOpType `protobuf:"varint,1,opt,name=op_type,json=opType,proto3,enum=sgtypes.ChannelOpType" json:"op_type,omitempty"`
	// The op package name. Empty if `type` is Open/Close.
	PackageName string `protobuf:"bytes,2,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	// The op script name. Empty if `type` is Open/Close.
	ScriptName string `protobuf:"bytes,3,opt,name=script_name,json=scriptName,proto3" json:"script_name,omitempty"`
	// used when op_type is ChannelOp.Action
	ModuleAddress        []byte   `protobuf:"bytes,4,opt,name=module_address,json=moduleAddress,proto3" json:"module_address,omitempty"`
	ModuleName           string   `protobuf:"bytes,5,opt,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"`
	FunctionName         string   `protobuf:"bytes,6,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelOp) Reset()         { *m = ChannelOp{} }
func (m *ChannelOp) String() string { return proto.CompactTextString(m) }
func (*ChannelOp) ProtoMessage()    {}
func (*ChannelOp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c51a1b4f26ac2713, []int{6}
}

func (m *ChannelOp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelOp.Unmarshal(m, b)
}
func (m *ChannelOp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelOp.Marshal(b, m, deterministic)
}
func (m *ChannelOp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelOp.Merge(m, src)
}
func (m *ChannelOp) XXX_Size() int {
	return xxx_messageInfo_ChannelOp.Size(m)
}
func (m *ChannelOp) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelOp.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelOp proto.InternalMessageInfo

func (m *ChannelOp) GetOpType() ChannelOpType {
	if m != nil {
		return m.OpType
	}
	return ChannelOpType_Open
}

func (m *ChannelOp) GetPackageName() string {
	if m != nil {
		return m.PackageName
	}
	return ""
}

func (m *ChannelOp) GetScriptName() string {
	if m != nil {
		return m.ScriptName
	}
	return ""
}

func (m *ChannelOp) GetModuleAddress() []byte {
	if m != nil {
		return m.ModuleAddress
	}
	return nil
}

func (m *ChannelOp) GetModuleName() string {
	if m != nil {
		return m.ModuleName
	}
	return ""
}

func (m *ChannelOp) GetFunctionName() string {
	if m != nil {
		return m.FunctionName
	}
	return ""
}

func init() {
	proto.RegisterEnum("sgtypes.ChannelOpType", ChannelOpType_name, ChannelOpType_value)
	proto.RegisterType((*ChannelTransactionRequest)(nil), "sgtypes.ChannelTransactionRequest")
	proto.RegisterType((*ChannelTransactionResponse)(nil), "sgtypes.ChannelTransactionResponse")
	proto.RegisterType((*ChannelTransactionSigs)(nil), "sgtypes.ChannelTransactionSigs")
	proto.RegisterType((*SignedChannelTransaction)(nil), "sgtypes.SignedChannelTransaction")
	proto.RegisterType((*ChannelTransactionProposal)(nil), "sgtypes.ChannelTransactionProposal")
	proto.RegisterType((*ChannelTransaction)(nil), "sgtypes.ChannelTransaction")
	proto.RegisterType((*ChannelOp)(nil), "sgtypes.ChannelOp")
}

func init() { proto.RegisterFile("channel_transaction.proto", fileDescriptor_c51a1b4f26ac2713) }

var fileDescriptor_c51a1b4f26ac2713 = []byte{
	// 736 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0xdd, 0x6a, 0x13, 0x41,
	0x14, 0x76, 0xf3, 0x9f, 0x93, 0x34, 0x4d, 0x47, 0x8d, 0xdb, 0xa8, 0xa4, 0xa6, 0x48, 0x4b, 0xc1,
	0x08, 0x51, 0xbc, 0x10, 0xa5, 0x94, 0x5a, 0x50, 0x84, 0xb6, 0x6c, 0x03, 0x5e, 0x2e, 0xd3, 0xe4,
	0x98, 0x2c, 0xcd, 0xee, 0x8c, 0x33, 0xb3, 0x6d, 0xf2, 0x46, 0xfa, 0x02, 0x82, 0x57, 0x3e, 0x89,
	0x8f, 0xe0, 0x3b, 0xc8, 0xce, 0xec, 0x4f, 0xda, 0x84, 0xd2, 0x4b, 0xaf, 0xca, 0x39, 0xe7, 0xfb,
	0xce, 0x7c, 0xe7, 0x9c, 0xaf, 0x1b, 0xd8, 0x1c, 0x4e, 0x68, 0x10, 0xe0, 0xd4, 0x55, 0x82, 0x06,
	0x92, 0x0e, 0x95, 0xc7, 0x82, 0x1e, 0x17, 0x4c, 0x31, 0x52, 0x96, 0x63, 0x35, 0xe7, 0x28, 0xdb,
	0x1b, 0x4b, 0xb5, 0xee, 0x6f, 0x0b, 0x36, 0x0f, 0x0d, 0x73, 0x90, 0x15, 0x1d, 0xfc, 0x16, 0xa2,
	0x54, 0x64, 0x1f, 0x2a, 0x5c, 0x30, 0xce, 0x24, 0x9d, 0xda, 0xd6, 0x96, 0xb5, 0x5b, 0xeb, 0x6f,
	0xf7, 0xe2, 0x66, 0xbd, 0x65, 0xd6, 0x69, 0x0c, 0x75, 0x52, 0x12, 0xf9, 0x04, 0xcd, 0x54, 0xd7,
	0x2c, 0x70, 0xa5, 0x37, 0x96, 0x76, 0x4e, 0x37, 0xea, 0xdc, 0xd2, 0xe8, 0xcc, 0x1b, 0x4b, 0xa7,
	0x11, 0x13, 0x07, 0x33, 0x1d, 0x93, 0x16, 0x94, 0x94, 0xa0, 0x97, 0x38, 0xb5, 0xf3, 0x5b, 0xd6,
	0x6e, 0xc5, 0x89, 0xa3, 0xee, 0x77, 0x0b, 0xda, 0xab, 0x26, 0x90, 0x9c, 0x05, 0x12, 0xff, 0xa7,
	0x11, 0xba, 0x3f, 0x73, 0xd0, 0x5a, 0x0d, 0x25, 0x36, 0x94, 0xe9, 0x68, 0x24, 0x50, 0x4a, 0xad,
	0xb2, 0xee, 0x24, 0x21, 0x79, 0x0a, 0xc0, 0xc3, 0xf3, 0xa9, 0x37, 0x74, 0x2f, 0x70, 0xae, 0x5f,
	0xae, 0x3b, 0x55, 0x93, 0xf9, 0x8c, 0x73, 0xf2, 0x36, 0xbb, 0x3c, 0xa7, 0xf3, 0x29, 0xa3, 0xa3,
	0x48, 0x62, 0x40, 0x55, 0x28, 0x50, 0x6f, 0xaa, 0xee, 0x3c, 0x8a, 0x01, 0xa7, 0xa6, 0x7e, 0x96,
	0x94, 0xc9, 0x1e, 0x6c, 0x5c, 0x79, 0x2a, 0x40, 0x29, 0xdd, 0x11, 0x55, 0xd4, 0x9d, 0x50, 0x39,
	0xb1, 0x0b, 0x9a, 0xb3, 0x1e, 0x17, 0x3e, 0x50, 0x45, 0x3f, 0x52, 0x39, 0x21, 0xaf, 0xa1, 0x75,
	0x0d, 0x9b, 0x3d, 0x52, 0xd4, 0x84, 0x07, 0x0b, 0x84, 0xec, 0x85, 0x23, 0xe8, 0x98, 0x33, 0xb9,
	0x2c, 0x54, 0x3c, 0x54, 0x6e, 0xd2, 0x23, 0xa3, 0x97, 0x34, 0xfd, 0x89, 0x81, 0x9d, 0x68, 0xd4,
	0x17, 0x03, 0x4a, 0xdb, 0x74, 0x7f, 0x58, 0x60, 0x47, 0x11, 0x8e, 0x96, 0xd7, 0x47, 0xfa, 0x50,
	0x12, 0xf4, 0xca, 0x55, 0xb3, 0xf8, 0xbe, 0x8f, 0x6f, 0x39, 0x8b, 0x53, 0x14, 0xf4, 0x6a, 0x30,
	0x8b, 0xd6, 0x1d, 0x29, 0x40, 0x11, 0xdd, 0x32, 0x1f, 0xad, 0x3b, 0x0e, 0xc9, 0x3e, 0x40, 0xaa,
	0x4d, 0xda, 0xf9, 0xad, 0xfc, 0x5d, 0x0e, 0xbd, 0x40, 0xe9, 0xfe, 0x5a, 0xe9, 0xc7, 0xc4, 0x58,
	0xe4, 0x1d, 0xd4, 0x16, 0xec, 0x74, 0x17, 0xc9, 0x90, 0xb9, 0x88, 0xf4, 0xe0, 0xbe, 0x31, 0x26,
	0x0a, 0x77, 0xc9, 0x15, 0x1b, 0x49, 0xe9, 0x34, 0x75, 0xc7, 0x0b, 0x20, 0x29, 0xfe, 0xa6, 0x2d,
	0x52, 0x78, 0xb6, 0xe7, 0x3f, 0x39, 0x20, 0x2b, 0x36, 0x6c, 0x43, 0xf9, 0x12, 0x85, 0xf4, 0x98,
	0xd1, 0x5b, 0x70, 0x92, 0x90, 0xec, 0xc0, 0x7a, 0x32, 0x4d, 0x62, 0x5f, 0xa3, 0x25, 0xb1, 0xfe,
	0x41, 0xec, 0xe2, 0x37, 0x90, 0xb8, 0xd0, 0x95, 0xd1, 0xc7, 0x25, 0x18, 0xa2, 0x1b, 0x84, 0xfe,
	0x39, 0x0a, 0xad, 0xa6, 0xe0, 0x3c, 0x8c, 0xcb, 0x67, 0x71, 0xf5, 0x58, 0x17, 0x49, 0x0f, 0x2a,
	0x8c, 0xa3, 0xa0, 0x8a, 0x09, 0xed, 0xcc, 0x5a, 0x9f, 0xdc, 0xdc, 0xd5, 0x09, 0x77, 0x52, 0x0c,
	0xe9, 0x41, 0x81, 0x8a, 0xb1, 0xb4, 0x8b, 0xfa, 0x70, 0xed, 0x9e, 0x41, 0x2e, 0x0c, 0x73, 0x20,
	0xc6, 0xa1, 0x8f, 0x81, 0x72, 0x34, 0x8e, 0xb4, 0x93, 0xcf, 0x03, 0x8a, 0xd8, 0x89, 0x69, 0x1c,
	0x0d, 0x77, 0x53, 0x6b, 0x59, 0x6b, 0x6d, 0xc8, 0xeb, 0x22, 0x77, 0x60, 0x1d, 0x67, 0xdc, 0x13,
	0x34, 0x7a, 0xc0, 0x55, 0x9e, 0x8f, 0x76, 0xc5, 0x00, 0xb3, 0xf4, 0xc0, 0xf3, 0xb1, 0xfb, 0xd7,
	0x82, 0x6a, 0xaa, 0x9a, 0xbc, 0x84, 0x32, 0xe3, 0x6e, 0xa4, 0x50, 0xaf, 0xb5, 0xd1, 0x6f, 0x2d,
	0x8f, 0x36, 0x98, 0x73, 0x74, 0x4a, 0x4c, 0xff, 0x25, 0xcf, 0xa0, 0xce, 0xe9, 0xf0, 0x82, 0x8e,
	0xd1, 0x0d, 0xa8, 0x8f, 0x7a, 0xd5, 0x55, 0xa7, 0x16, 0xe7, 0x8e, 0xa9, 0x8f, 0xa4, 0x03, 0x35,
	0x39, 0x14, 0x1e, 0x57, 0x06, 0x91, 0xd7, 0x08, 0x30, 0x29, 0x0d, 0x78, 0x0e, 0x0d, 0x9f, 0x8d,
	0xc2, 0x29, 0xa6, 0x07, 0x33, 0xff, 0xf0, 0x6b, 0x26, 0x9b, 0xdc, 0xab, 0x03, 0xb5, 0x18, 0xa6,
	0xfb, 0x14, 0x4d, 0x1f, 0x93, 0xd2, 0x7d, 0xb6, 0x61, 0xed, 0x6b, 0x18, 0xe8, 0x95, 0x1a, 0x48,
	0x49, 0x43, 0xea, 0x49, 0x32, 0x02, 0xed, 0xbd, 0x87, 0xb5, 0x6b, 0x93, 0x90, 0x0a, 0x14, 0x4e,
	0x38, 0x06, 0xcd, 0x7b, 0xa4, 0x06, 0xe5, 0xa3, 0x19, 0x0e, 0x43, 0x85, 0x4d, 0x8b, 0x00, 0x94,
	0x0e, 0x34, 0xab, 0x99, 0x23, 0x55, 0x28, 0x1e, 0x4e, 0x99, 0xc4, 0x66, 0xfe, 0xbc, 0xa4, 0x7f,
	0xa3, 0x5e, 0xfd, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x2d, 0x22, 0xce, 0x7c, 0xdc, 0x06, 0x00, 0x00,
}
