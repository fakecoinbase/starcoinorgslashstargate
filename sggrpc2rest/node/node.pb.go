// Code generated by protoc-gen-go. DO NOT EDIT.
// source: node.proto

package node

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
	sgtypes "starcoin/sgtypes"
	types "starcoin/types"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type QueryTransactionQuest struct {
	ParticipantAddress   []byte   `protobuf:"bytes,1,opt,name=participant_address,json=participantAddress,proto3" json:"participant_address,omitempty"`
	ChannelSeqNumber     uint64   `protobuf:"varint,2,opt,name=channel_seq_number,json=channelSeqNumber,proto3" json:"channel_seq_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryTransactionQuest) Reset()         { *m = QueryTransactionQuest{} }
func (m *QueryTransactionQuest) String() string { return proto.CompactTextString(m) }
func (*QueryTransactionQuest) ProtoMessage()    {}
func (*QueryTransactionQuest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{0}
}

func (m *QueryTransactionQuest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryTransactionQuest.Unmarshal(m, b)
}
func (m *QueryTransactionQuest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryTransactionQuest.Marshal(b, m, deterministic)
}
func (m *QueryTransactionQuest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTransactionQuest.Merge(m, src)
}
func (m *QueryTransactionQuest) XXX_Size() int {
	return xxx_messageInfo_QueryTransactionQuest.Size(m)
}
func (m *QueryTransactionQuest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTransactionQuest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTransactionQuest proto.InternalMessageInfo

func (m *QueryTransactionQuest) GetParticipantAddress() []byte {
	if m != nil {
		return m.ParticipantAddress
	}
	return nil
}

func (m *QueryTransactionQuest) GetChannelSeqNumber() uint64 {
	if m != nil {
		return m.ChannelSeqNumber
	}
	return 0
}

type OpenChannelRequest struct {
	RemoteAddr           []byte   `protobuf:"bytes,1,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	LocalAmount          uint64   `protobuf:"varint,2,opt,name=local_amount,json=localAmount,proto3" json:"local_amount,omitempty"`
	RemoteAmount         uint64   `protobuf:"varint,3,opt,name=remote_amount,json=remoteAmount,proto3" json:"remote_amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenChannelRequest) Reset()         { *m = OpenChannelRequest{} }
func (m *OpenChannelRequest) String() string { return proto.CompactTextString(m) }
func (*OpenChannelRequest) ProtoMessage()    {}
func (*OpenChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{1}
}

func (m *OpenChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenChannelRequest.Unmarshal(m, b)
}
func (m *OpenChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenChannelRequest.Marshal(b, m, deterministic)
}
func (m *OpenChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenChannelRequest.Merge(m, src)
}
func (m *OpenChannelRequest) XXX_Size() int {
	return xxx_messageInfo_OpenChannelRequest.Size(m)
}
func (m *OpenChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenChannelRequest proto.InternalMessageInfo

func (m *OpenChannelRequest) GetRemoteAddr() []byte {
	if m != nil {
		return m.RemoteAddr
	}
	return nil
}

func (m *OpenChannelRequest) GetLocalAmount() uint64 {
	if m != nil {
		return m.LocalAmount
	}
	return 0
}

func (m *OpenChannelRequest) GetRemoteAmount() uint64 {
	if m != nil {
		return m.RemoteAmount
	}
	return 0
}

type OpenChannelResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenChannelResponse) Reset()         { *m = OpenChannelResponse{} }
func (m *OpenChannelResponse) String() string { return proto.CompactTextString(m) }
func (*OpenChannelResponse) ProtoMessage()    {}
func (*OpenChannelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{2}
}

func (m *OpenChannelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenChannelResponse.Unmarshal(m, b)
}
func (m *OpenChannelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenChannelResponse.Marshal(b, m, deterministic)
}
func (m *OpenChannelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenChannelResponse.Merge(m, src)
}
func (m *OpenChannelResponse) XXX_Size() int {
	return xxx_messageInfo_OpenChannelResponse.Size(m)
}
func (m *OpenChannelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenChannelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OpenChannelResponse proto.InternalMessageInfo

type DepositRequest struct {
	RemoteAddr           []byte   `protobuf:"bytes,1,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	LocalAmount          uint64   `protobuf:"varint,2,opt,name=local_amount,json=localAmount,proto3" json:"local_amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DepositRequest) Reset()         { *m = DepositRequest{} }
func (m *DepositRequest) String() string { return proto.CompactTextString(m) }
func (*DepositRequest) ProtoMessage()    {}
func (*DepositRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{3}
}

func (m *DepositRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepositRequest.Unmarshal(m, b)
}
func (m *DepositRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepositRequest.Marshal(b, m, deterministic)
}
func (m *DepositRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepositRequest.Merge(m, src)
}
func (m *DepositRequest) XXX_Size() int {
	return xxx_messageInfo_DepositRequest.Size(m)
}
func (m *DepositRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DepositRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DepositRequest proto.InternalMessageInfo

func (m *DepositRequest) GetRemoteAddr() []byte {
	if m != nil {
		return m.RemoteAddr
	}
	return nil
}

func (m *DepositRequest) GetLocalAmount() uint64 {
	if m != nil {
		return m.LocalAmount
	}
	return 0
}

type DepositResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DepositResponse) Reset()         { *m = DepositResponse{} }
func (m *DepositResponse) String() string { return proto.CompactTextString(m) }
func (*DepositResponse) ProtoMessage()    {}
func (*DepositResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{4}
}

func (m *DepositResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepositResponse.Unmarshal(m, b)
}
func (m *DepositResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepositResponse.Marshal(b, m, deterministic)
}
func (m *DepositResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepositResponse.Merge(m, src)
}
func (m *DepositResponse) XXX_Size() int {
	return xxx_messageInfo_DepositResponse.Size(m)
}
func (m *DepositResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DepositResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DepositResponse proto.InternalMessageInfo

type WithdrawRequest struct {
	RemoteAddr           []byte   `protobuf:"bytes,1,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	LocalAmount          uint64   `protobuf:"varint,2,opt,name=local_amount,json=localAmount,proto3" json:"local_amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithdrawRequest) Reset()         { *m = WithdrawRequest{} }
func (m *WithdrawRequest) String() string { return proto.CompactTextString(m) }
func (*WithdrawRequest) ProtoMessage()    {}
func (*WithdrawRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{5}
}

func (m *WithdrawRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawRequest.Unmarshal(m, b)
}
func (m *WithdrawRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawRequest.Marshal(b, m, deterministic)
}
func (m *WithdrawRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawRequest.Merge(m, src)
}
func (m *WithdrawRequest) XXX_Size() int {
	return xxx_messageInfo_WithdrawRequest.Size(m)
}
func (m *WithdrawRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawRequest proto.InternalMessageInfo

func (m *WithdrawRequest) GetRemoteAddr() []byte {
	if m != nil {
		return m.RemoteAddr
	}
	return nil
}

func (m *WithdrawRequest) GetLocalAmount() uint64 {
	if m != nil {
		return m.LocalAmount
	}
	return 0
}

type WithdrawResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithdrawResponse) Reset()         { *m = WithdrawResponse{} }
func (m *WithdrawResponse) String() string { return proto.CompactTextString(m) }
func (*WithdrawResponse) ProtoMessage()    {}
func (*WithdrawResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{6}
}

func (m *WithdrawResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawResponse.Unmarshal(m, b)
}
func (m *WithdrawResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawResponse.Marshal(b, m, deterministic)
}
func (m *WithdrawResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawResponse.Merge(m, src)
}
func (m *WithdrawResponse) XXX_Size() int {
	return xxx_messageInfo_WithdrawResponse.Size(m)
}
func (m *WithdrawResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawResponse proto.InternalMessageInfo

type PayRequest struct {
	RemoteAddr           []byte   `protobuf:"bytes,1,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	Amount               uint64   `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayRequest) Reset()         { *m = PayRequest{} }
func (m *PayRequest) String() string { return proto.CompactTextString(m) }
func (*PayRequest) ProtoMessage()    {}
func (*PayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{7}
}

func (m *PayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayRequest.Unmarshal(m, b)
}
func (m *PayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayRequest.Marshal(b, m, deterministic)
}
func (m *PayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayRequest.Merge(m, src)
}
func (m *PayRequest) XXX_Size() int {
	return xxx_messageInfo_PayRequest.Size(m)
}
func (m *PayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PayRequest proto.InternalMessageInfo

func (m *PayRequest) GetRemoteAddr() []byte {
	if m != nil {
		return m.RemoteAddr
	}
	return nil
}

func (m *PayRequest) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type PayResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayResponse) Reset()         { *m = PayResponse{} }
func (m *PayResponse) String() string { return proto.CompactTextString(m) }
func (*PayResponse) ProtoMessage()    {}
func (*PayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{8}
}

func (m *PayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayResponse.Unmarshal(m, b)
}
func (m *PayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayResponse.Marshal(b, m, deterministic)
}
func (m *PayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayResponse.Merge(m, src)
}
func (m *PayResponse) XXX_Size() int {
	return xxx_messageInfo_PayResponse.Size(m)
}
func (m *PayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PayResponse proto.InternalMessageInfo

type ChannelBalanceRequest struct {
	RemoteAddr           []byte   `protobuf:"bytes,1,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelBalanceRequest) Reset()         { *m = ChannelBalanceRequest{} }
func (m *ChannelBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*ChannelBalanceRequest) ProtoMessage()    {}
func (*ChannelBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{9}
}

func (m *ChannelBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelBalanceRequest.Unmarshal(m, b)
}
func (m *ChannelBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelBalanceRequest.Marshal(b, m, deterministic)
}
func (m *ChannelBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelBalanceRequest.Merge(m, src)
}
func (m *ChannelBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_ChannelBalanceRequest.Size(m)
}
func (m *ChannelBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelBalanceRequest proto.InternalMessageInfo

func (m *ChannelBalanceRequest) GetRemoteAddr() []byte {
	if m != nil {
		return m.RemoteAddr
	}
	return nil
}

type ChannelBalanceResponse struct {
	Balance              uint64   `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelBalanceResponse) Reset()         { *m = ChannelBalanceResponse{} }
func (m *ChannelBalanceResponse) String() string { return proto.CompactTextString(m) }
func (*ChannelBalanceResponse) ProtoMessage()    {}
func (*ChannelBalanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{10}
}

func (m *ChannelBalanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelBalanceResponse.Unmarshal(m, b)
}
func (m *ChannelBalanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelBalanceResponse.Marshal(b, m, deterministic)
}
func (m *ChannelBalanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelBalanceResponse.Merge(m, src)
}
func (m *ChannelBalanceResponse) XXX_Size() int {
	return xxx_messageInfo_ChannelBalanceResponse.Size(m)
}
func (m *ChannelBalanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelBalanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelBalanceResponse proto.InternalMessageInfo

func (m *ChannelBalanceResponse) GetBalance() uint64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type InstallChannelScriptPackageRequest struct {
	ChannelScriptPackage *ChannelScriptPackage `protobuf:"bytes,1,opt,name=channel_script_package,json=channelScriptPackage,proto3" json:"channel_script_package,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *InstallChannelScriptPackageRequest) Reset()         { *m = InstallChannelScriptPackageRequest{} }
func (m *InstallChannelScriptPackageRequest) String() string { return proto.CompactTextString(m) }
func (*InstallChannelScriptPackageRequest) ProtoMessage()    {}
func (*InstallChannelScriptPackageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{11}
}

func (m *InstallChannelScriptPackageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallChannelScriptPackageRequest.Unmarshal(m, b)
}
func (m *InstallChannelScriptPackageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallChannelScriptPackageRequest.Marshal(b, m, deterministic)
}
func (m *InstallChannelScriptPackageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallChannelScriptPackageRequest.Merge(m, src)
}
func (m *InstallChannelScriptPackageRequest) XXX_Size() int {
	return xxx_messageInfo_InstallChannelScriptPackageRequest.Size(m)
}
func (m *InstallChannelScriptPackageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallChannelScriptPackageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InstallChannelScriptPackageRequest proto.InternalMessageInfo

func (m *InstallChannelScriptPackageRequest) GetChannelScriptPackage() *sgtypes.ChannelScriptPackage {
	if m != nil {
		return m.ChannelScriptPackage
	}
	return nil
}

type InstallChannelScriptPackageResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstallChannelScriptPackageResponse) Reset()         { *m = InstallChannelScriptPackageResponse{} }
func (m *InstallChannelScriptPackageResponse) String() string { return proto.CompactTextString(m) }
func (*InstallChannelScriptPackageResponse) ProtoMessage()    {}
func (*InstallChannelScriptPackageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{12}
}

func (m *InstallChannelScriptPackageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallChannelScriptPackageResponse.Unmarshal(m, b)
}
func (m *InstallChannelScriptPackageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallChannelScriptPackageResponse.Marshal(b, m, deterministic)
}
func (m *InstallChannelScriptPackageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallChannelScriptPackageResponse.Merge(m, src)
}
func (m *InstallChannelScriptPackageResponse) XXX_Size() int {
	return xxx_messageInfo_InstallChannelScriptPackageResponse.Size(m)
}
func (m *InstallChannelScriptPackageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallChannelScriptPackageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InstallChannelScriptPackageResponse proto.InternalMessageInfo

type DeployModuleRequest struct {
	ModuleBytes          []byte   `protobuf:"bytes,1,opt,name=module_bytes,json=moduleBytes,proto3" json:"module_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployModuleRequest) Reset()         { *m = DeployModuleRequest{} }
func (m *DeployModuleRequest) String() string { return proto.CompactTextString(m) }
func (*DeployModuleRequest) ProtoMessage()    {}
func (*DeployModuleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{13}
}

func (m *DeployModuleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployModuleRequest.Unmarshal(m, b)
}
func (m *DeployModuleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployModuleRequest.Marshal(b, m, deterministic)
}
func (m *DeployModuleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployModuleRequest.Merge(m, src)
}
func (m *DeployModuleRequest) XXX_Size() int {
	return xxx_messageInfo_DeployModuleRequest.Size(m)
}
func (m *DeployModuleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployModuleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeployModuleRequest proto.InternalMessageInfo

func (m *DeployModuleRequest) GetModuleBytes() []byte {
	if m != nil {
		return m.ModuleBytes
	}
	return nil
}

type DeployModuleResponse struct {
	TransactionWithProof *types.TransactionWithProof `protobuf:"bytes,1,opt,name=transaction_with_proof,json=transactionWithProof,proto3" json:"transaction_with_proof,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DeployModuleResponse) Reset()         { *m = DeployModuleResponse{} }
func (m *DeployModuleResponse) String() string { return proto.CompactTextString(m) }
func (*DeployModuleResponse) ProtoMessage()    {}
func (*DeployModuleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{14}
}

func (m *DeployModuleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployModuleResponse.Unmarshal(m, b)
}
func (m *DeployModuleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployModuleResponse.Marshal(b, m, deterministic)
}
func (m *DeployModuleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployModuleResponse.Merge(m, src)
}
func (m *DeployModuleResponse) XXX_Size() int {
	return xxx_messageInfo_DeployModuleResponse.Size(m)
}
func (m *DeployModuleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployModuleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeployModuleResponse proto.InternalMessageInfo

func (m *DeployModuleResponse) GetTransactionWithProof() *types.TransactionWithProof {
	if m != nil {
		return m.TransactionWithProof
	}
	return nil
}

type ExecuteScriptRequest struct {
	RemoteAddr           []byte   `protobuf:"bytes,1,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	PackageName          string   `protobuf:"bytes,2,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	ScriptName           string   `protobuf:"bytes,3,opt,name=script_name,json=scriptName,proto3" json:"script_name,omitempty"`
	Args                 [][]byte `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecuteScriptRequest) Reset()         { *m = ExecuteScriptRequest{} }
func (m *ExecuteScriptRequest) String() string { return proto.CompactTextString(m) }
func (*ExecuteScriptRequest) ProtoMessage()    {}
func (*ExecuteScriptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{15}
}

func (m *ExecuteScriptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteScriptRequest.Unmarshal(m, b)
}
func (m *ExecuteScriptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteScriptRequest.Marshal(b, m, deterministic)
}
func (m *ExecuteScriptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteScriptRequest.Merge(m, src)
}
func (m *ExecuteScriptRequest) XXX_Size() int {
	return xxx_messageInfo_ExecuteScriptRequest.Size(m)
}
func (m *ExecuteScriptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteScriptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteScriptRequest proto.InternalMessageInfo

func (m *ExecuteScriptRequest) GetRemoteAddr() []byte {
	if m != nil {
		return m.RemoteAddr
	}
	return nil
}

func (m *ExecuteScriptRequest) GetPackageName() string {
	if m != nil {
		return m.PackageName
	}
	return ""
}

func (m *ExecuteScriptRequest) GetScriptName() string {
	if m != nil {
		return m.ScriptName
	}
	return ""
}

func (m *ExecuteScriptRequest) GetArgs() [][]byte {
	if m != nil {
		return m.Args
	}
	return nil
}

type ExecuteScriptResponse struct {
	ChannelSequenceNumber uint64   `protobuf:"varint,1,opt,name=channel_sequence_number,json=channelSequenceNumber,proto3" json:"channel_sequence_number,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *ExecuteScriptResponse) Reset()         { *m = ExecuteScriptResponse{} }
func (m *ExecuteScriptResponse) String() string { return proto.CompactTextString(m) }
func (*ExecuteScriptResponse) ProtoMessage()    {}
func (*ExecuteScriptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{16}
}

func (m *ExecuteScriptResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteScriptResponse.Unmarshal(m, b)
}
func (m *ExecuteScriptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteScriptResponse.Marshal(b, m, deterministic)
}
func (m *ExecuteScriptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteScriptResponse.Merge(m, src)
}
func (m *ExecuteScriptResponse) XXX_Size() int {
	return xxx_messageInfo_ExecuteScriptResponse.Size(m)
}
func (m *ExecuteScriptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteScriptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteScriptResponse proto.InternalMessageInfo

func (m *ExecuteScriptResponse) GetChannelSequenceNumber() uint64 {
	if m != nil {
		return m.ChannelSequenceNumber
	}
	return 0
}

type GetChannelTransactionProposalResponse struct {
	ChannelTransaction   *sgtypes.ChannelTransaction `protobuf:"bytes,1,opt,name=channel_transaction,json=channelTransaction,proto3" json:"channel_transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetChannelTransactionProposalResponse) Reset()         { *m = GetChannelTransactionProposalResponse{} }
func (m *GetChannelTransactionProposalResponse) String() string { return proto.CompactTextString(m) }
func (*GetChannelTransactionProposalResponse) ProtoMessage()    {}
func (*GetChannelTransactionProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{17}
}

func (m *GetChannelTransactionProposalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChannelTransactionProposalResponse.Unmarshal(m, b)
}
func (m *GetChannelTransactionProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChannelTransactionProposalResponse.Marshal(b, m, deterministic)
}
func (m *GetChannelTransactionProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChannelTransactionProposalResponse.Merge(m, src)
}
func (m *GetChannelTransactionProposalResponse) XXX_Size() int {
	return xxx_messageInfo_GetChannelTransactionProposalResponse.Size(m)
}
func (m *GetChannelTransactionProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChannelTransactionProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetChannelTransactionProposalResponse proto.InternalMessageInfo

func (m *GetChannelTransactionProposalResponse) GetChannelTransaction() *sgtypes.ChannelTransaction {
	if m != nil {
		return m.ChannelTransaction
	}
	return nil
}

type ChannelTransactionProposalRequest struct {
	ParticipantAddress   []byte   `protobuf:"bytes,1,opt,name=participant_address,json=participantAddress,proto3" json:"participant_address,omitempty"`
	TransactionHash      []byte   `protobuf:"bytes,2,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	Approve              bool     `protobuf:"varint,3,opt,name=approve,proto3" json:"approve,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelTransactionProposalRequest) Reset()         { *m = ChannelTransactionProposalRequest{} }
func (m *ChannelTransactionProposalRequest) String() string { return proto.CompactTextString(m) }
func (*ChannelTransactionProposalRequest) ProtoMessage()    {}
func (*ChannelTransactionProposalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{18}
}

func (m *ChannelTransactionProposalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelTransactionProposalRequest.Unmarshal(m, b)
}
func (m *ChannelTransactionProposalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelTransactionProposalRequest.Marshal(b, m, deterministic)
}
func (m *ChannelTransactionProposalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelTransactionProposalRequest.Merge(m, src)
}
func (m *ChannelTransactionProposalRequest) XXX_Size() int {
	return xxx_messageInfo_ChannelTransactionProposalRequest.Size(m)
}
func (m *ChannelTransactionProposalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelTransactionProposalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelTransactionProposalRequest proto.InternalMessageInfo

func (m *ChannelTransactionProposalRequest) GetParticipantAddress() []byte {
	if m != nil {
		return m.ParticipantAddress
	}
	return nil
}

func (m *ChannelTransactionProposalRequest) GetTransactionHash() []byte {
	if m != nil {
		return m.TransactionHash
	}
	return nil
}

func (m *ChannelTransactionProposalRequest) GetApprove() bool {
	if m != nil {
		return m.Approve
	}
	return false
}

type EmptyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyResponse) Reset()         { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()    {}
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{19}
}

func (m *EmptyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyResponse.Unmarshal(m, b)
}
func (m *EmptyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyResponse.Marshal(b, m, deterministic)
}
func (m *EmptyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyResponse.Merge(m, src)
}
func (m *EmptyResponse) XXX_Size() int {
	return xxx_messageInfo_EmptyResponse.Size(m)
}
func (m *EmptyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyResponse proto.InternalMessageInfo

type AddInvoiceRequest struct {
	Amount               uint64   `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddInvoiceRequest) Reset()         { *m = AddInvoiceRequest{} }
func (m *AddInvoiceRequest) String() string { return proto.CompactTextString(m) }
func (*AddInvoiceRequest) ProtoMessage()    {}
func (*AddInvoiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{20}
}

func (m *AddInvoiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddInvoiceRequest.Unmarshal(m, b)
}
func (m *AddInvoiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddInvoiceRequest.Marshal(b, m, deterministic)
}
func (m *AddInvoiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddInvoiceRequest.Merge(m, src)
}
func (m *AddInvoiceRequest) XXX_Size() int {
	return xxx_messageInfo_AddInvoiceRequest.Size(m)
}
func (m *AddInvoiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddInvoiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddInvoiceRequest proto.InternalMessageInfo

func (m *AddInvoiceRequest) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type AddInvoiceResponse struct {
	EncodedInvoice       string   `protobuf:"bytes,1,opt,name=encoded_invoice,json=encodedInvoice,proto3" json:"encoded_invoice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddInvoiceResponse) Reset()         { *m = AddInvoiceResponse{} }
func (m *AddInvoiceResponse) String() string { return proto.CompactTextString(m) }
func (*AddInvoiceResponse) ProtoMessage()    {}
func (*AddInvoiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{21}
}

func (m *AddInvoiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddInvoiceResponse.Unmarshal(m, b)
}
func (m *AddInvoiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddInvoiceResponse.Marshal(b, m, deterministic)
}
func (m *AddInvoiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddInvoiceResponse.Merge(m, src)
}
func (m *AddInvoiceResponse) XXX_Size() int {
	return xxx_messageInfo_AddInvoiceResponse.Size(m)
}
func (m *AddInvoiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddInvoiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddInvoiceResponse proto.InternalMessageInfo

func (m *AddInvoiceResponse) GetEncodedInvoice() string {
	if m != nil {
		return m.EncodedInvoice
	}
	return ""
}

type PaymentRequest struct {
	EncodedInvoice       string   `protobuf:"bytes,1,opt,name=encoded_invoice,json=encodedInvoice,proto3" json:"encoded_invoice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentRequest) Reset()         { *m = PaymentRequest{} }
func (m *PaymentRequest) String() string { return proto.CompactTextString(m) }
func (*PaymentRequest) ProtoMessage()    {}
func (*PaymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{22}
}

func (m *PaymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentRequest.Unmarshal(m, b)
}
func (m *PaymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentRequest.Marshal(b, m, deterministic)
}
func (m *PaymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentRequest.Merge(m, src)
}
func (m *PaymentRequest) XXX_Size() int {
	return xxx_messageInfo_PaymentRequest.Size(m)
}
func (m *PaymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentRequest proto.InternalMessageInfo

func (m *PaymentRequest) GetEncodedInvoice() string {
	if m != nil {
		return m.EncodedInvoice
	}
	return ""
}

func init() {
	proto.RegisterType((*QueryTransactionQuest)(nil), "node.QueryTransactionQuest")
	proto.RegisterType((*OpenChannelRequest)(nil), "node.OpenChannelRequest")
	proto.RegisterType((*OpenChannelResponse)(nil), "node.OpenChannelResponse")
	proto.RegisterType((*DepositRequest)(nil), "node.DepositRequest")
	proto.RegisterType((*DepositResponse)(nil), "node.DepositResponse")
	proto.RegisterType((*WithdrawRequest)(nil), "node.WithdrawRequest")
	proto.RegisterType((*WithdrawResponse)(nil), "node.WithdrawResponse")
	proto.RegisterType((*PayRequest)(nil), "node.PayRequest")
	proto.RegisterType((*PayResponse)(nil), "node.PayResponse")
	proto.RegisterType((*ChannelBalanceRequest)(nil), "node.ChannelBalanceRequest")
	proto.RegisterType((*ChannelBalanceResponse)(nil), "node.ChannelBalanceResponse")
	proto.RegisterType((*InstallChannelScriptPackageRequest)(nil), "node.InstallChannelScriptPackageRequest")
	proto.RegisterType((*InstallChannelScriptPackageResponse)(nil), "node.InstallChannelScriptPackageResponse")
	proto.RegisterType((*DeployModuleRequest)(nil), "node.DeployModuleRequest")
	proto.RegisterType((*DeployModuleResponse)(nil), "node.DeployModuleResponse")
	proto.RegisterType((*ExecuteScriptRequest)(nil), "node.ExecuteScriptRequest")
	proto.RegisterType((*ExecuteScriptResponse)(nil), "node.ExecuteScriptResponse")
	proto.RegisterType((*GetChannelTransactionProposalResponse)(nil), "node.GetChannelTransactionProposalResponse")
	proto.RegisterType((*ChannelTransactionProposalRequest)(nil), "node.ChannelTransactionProposalRequest")
	proto.RegisterType((*EmptyResponse)(nil), "node.EmptyResponse")
	proto.RegisterType((*AddInvoiceRequest)(nil), "node.AddInvoiceRequest")
	proto.RegisterType((*AddInvoiceResponse)(nil), "node.AddInvoiceResponse")
	proto.RegisterType((*PaymentRequest)(nil), "node.PaymentRequest")
}

func init() { proto.RegisterFile("node.proto", fileDescriptor_0c843d59d2d938e7) }

var fileDescriptor_0c843d59d2d938e7 = []byte{
	// 1113 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xcf, 0x6f, 0xe3, 0x44,
	0x14, 0x56, 0xb6, 0xd1, 0xee, 0xf6, 0x25, 0x4d, 0xd3, 0xc9, 0x8f, 0xa6, 0x6e, 0xcb, 0xb6, 0xb3,
	0xbb, 0x6a, 0xbb, 0x0b, 0x8d, 0x54, 0x24, 0x04, 0x48, 0x48, 0x74, 0xd9, 0x0a, 0x56, 0x82, 0x6e,
	0xea, 0x16, 0x71, 0x42, 0xd6, 0xd4, 0x1e, 0x12, 0x43, 0x32, 0xe3, 0xda, 0x4e, 0x4b, 0x0e, 0x5c,
	0xb8, 0x71, 0xe2, 0x80, 0x38, 0x70, 0xe6, 0x4f, 0xe2, 0x5f, 0xe0, 0xff, 0x00, 0xcd, 0xcc, 0xb3,
	0x63, 0x27, 0x26, 0x04, 0xb4, 0xb7, 0xfa, 0x7b, 0xf3, 0xbe, 0xef, 0xcd, 0x9b, 0x79, 0xdf, 0xa4,
	0x00, 0x42, 0x7a, 0xfc, 0x38, 0x08, 0x65, 0x2c, 0x49, 0x59, 0xfd, 0x6d, 0x35, 0x23, 0x37, 0xf4,
	0x83, 0xd8, 0x09, 0x98, 0xfb, 0x1d, 0xeb, 0x63, 0xcc, 0xda, 0x88, 0x43, 0x26, 0x22, 0xe6, 0xc6,
	0xbe, 0x14, 0x08, 0x6d, 0xb9, 0x03, 0x26, 0x04, 0x1f, 0x3a, 0xf3, 0xa1, 0x9d, 0xbe, 0x94, 0xfd,
	0x21, 0xef, 0xb2, 0xc0, 0xef, 0x32, 0x21, 0x64, 0xcc, 0x54, 0x30, 0x32, 0x51, 0x7a, 0x0b, 0xad,
	0x8b, 0x31, 0x0f, 0x27, 0x57, 0xd3, 0xbc, 0x8b, 0x31, 0x8f, 0x62, 0xd2, 0x85, 0x46, 0xc0, 0xc2,
	0xd8, 0x77, 0xfd, 0x80, 0x89, 0xd8, 0x61, 0x9e, 0x17, 0xf2, 0x28, 0xea, 0x94, 0xf6, 0x4a, 0x87,
	0x55, 0x9b, 0x64, 0x42, 0xa7, 0x26, 0x42, 0xde, 0x06, 0x92, 0x14, 0x11, 0xf1, 0x1b, 0x47, 0x8c,
	0x47, 0xd7, 0x3c, 0xec, 0xdc, 0xdb, 0x2b, 0x1d, 0x96, 0xed, 0x3a, 0x46, 0x2e, 0xf9, 0xcd, 0xb9,
	0xc6, 0xe9, 0x0f, 0x40, 0x5e, 0x07, 0x5c, 0x7c, 0x62, 0x70, 0x9b, 0xdf, 0x68, 0xd1, 0x47, 0x50,
	0x09, 0xf9, 0x48, 0xc6, 0x5c, 0xeb, 0xa1, 0x18, 0x18, 0x48, 0xe9, 0x90, 0x7d, 0xa8, 0x0e, 0xa5,
	0xcb, 0x86, 0x0e, 0x1b, 0xc9, 0xb1, 0x88, 0x91, 0xbe, 0xa2, 0xb1, 0x53, 0x0d, 0x91, 0xc7, 0xb0,
	0x96, 0x70, 0x98, 0x35, 0x2b, 0x7a, 0x4d, 0x15, 0x59, 0x34, 0x46, 0x5b, 0xd0, 0xc8, 0xc9, 0x47,
	0x81, 0x14, 0x11, 0xa7, 0x57, 0x50, 0x7b, 0xc9, 0x03, 0x19, 0xf9, 0xf1, 0x1b, 0xac, 0x88, 0x6e,
	0xc0, 0x7a, 0xca, 0x8a, 0x42, 0x5f, 0xc2, 0xfa, 0x57, 0x7e, 0x3c, 0xf0, 0x42, 0x76, 0xf7, 0x26,
	0x95, 0x08, 0xd4, 0xa7, 0xb4, 0x28, 0x75, 0x06, 0xd0, 0x63, 0x93, 0xa5, 0x55, 0xda, 0x70, 0x3f,
	0xc7, 0x8f, 0x5f, 0x74, 0x0d, 0x2a, 0x9a, 0x06, 0x59, 0xdf, 0x87, 0x16, 0x36, 0xef, 0x05, 0x1b,
	0x32, 0xe1, 0xf2, 0x65, 0x05, 0xe8, 0x09, 0xb4, 0x67, 0x33, 0x0d, 0x27, 0xe9, 0xc0, 0x83, 0x6b,
	0x03, 0xe9, 0xb4, 0xb2, 0x9d, 0x7c, 0xd2, 0x09, 0xd0, 0x57, 0x22, 0x8a, 0xd9, 0x70, 0x88, 0xa9,
	0x97, 0x7a, 0x2e, 0x7a, 0x66, 0x2c, 0x12, 0xe9, 0x4b, 0x68, 0xa7, 0x37, 0x30, 0x37, 0x37, 0x9a,
	0xae, 0x72, 0xb2, 0x7b, 0x1c, 0xf5, 0xe3, 0x49, 0xc0, 0xa3, 0xe3, 0x42, 0x96, 0xa6, 0x5b, 0x80,
	0xd2, 0xa7, 0xf0, 0x78, 0xa1, 0x74, 0xda, 0x8f, 0xc6, 0x4b, 0x1e, 0x0c, 0xe5, 0xe4, 0x0b, 0xe9,
	0x8d, 0x87, 0x69, 0x49, 0xfb, 0x50, 0x1d, 0x69, 0xc0, 0xb9, 0x9e, 0xc4, 0x3c, 0x19, 0x9f, 0x8a,
	0xc1, 0x5e, 0x28, 0x88, 0xfa, 0xd0, 0xcc, 0x67, 0x62, 0x37, 0x2e, 0xa0, 0x9d, 0x19, 0x66, 0xe7,
	0xce, 0x8f, 0x07, 0x4e, 0x10, 0x4a, 0xf9, 0x0d, 0xee, 0x66, 0xfb, 0xd8, 0xec, 0x25, 0x33, 0xb9,
	0xea, 0xec, 0x7b, 0x6a, 0x89, 0xdd, 0x8c, 0x0b, 0x50, 0xfa, 0x73, 0x09, 0x9a, 0x67, 0xdf, 0x73,
	0x77, 0x1c, 0x73, 0xb3, 0x8b, 0xff, 0x72, 0xf7, 0xb0, 0x97, 0x8e, 0x60, 0x23, 0xae, 0xef, 0xc6,
	0xaa, 0x5d, 0x41, 0xec, 0x9c, 0x8d, 0xb8, 0xe2, 0xc0, 0xae, 0xeb, 0x15, 0x2b, 0x7a, 0x05, 0x18,
	0x48, 0x2f, 0x20, 0x50, 0x66, 0x61, 0x3f, 0xea, 0x94, 0xf7, 0x56, 0x0e, 0xab, 0xb6, 0xfe, 0x9b,
	0xbe, 0x86, 0xd6, 0x4c, 0x41, 0xb8, 0xfb, 0xf7, 0x60, 0x33, 0xe3, 0x26, 0x63, 0x2e, 0x5c, 0x9e,
	0x58, 0x8a, 0xb9, 0x1b, 0xad, 0xa9, 0xa5, 0xe8, 0x28, 0xfa, 0xca, 0x18, 0x9e, 0x7e, 0xca, 0x63,
	0x3c, 0xaa, 0x4c, 0x6b, 0x7a, 0xa1, 0x0c, 0x64, 0xc4, 0xd2, 0x51, 0x27, 0x9f, 0x43, 0xa3, 0xc0,
	0x33, 0xd3, 0xde, 0xce, 0xdc, 0x94, 0x0c, 0x93, 0x9d, 0xd8, 0x5c, 0x06, 0xa3, 0xbf, 0x95, 0x60,
	0x7f, 0x91, 0xe8, 0xcd, 0xff, 0xf3, 0xd4, 0x23, 0xa8, 0x67, 0xef, 0xc0, 0x80, 0x45, 0x03, 0xdd,
	0xfa, 0xaa, 0xbd, 0x9e, 0xc1, 0x3f, 0x63, 0xd1, 0x40, 0x0d, 0x0f, 0x0b, 0x82, 0x50, 0xde, 0x9a,
	0xd6, 0x3f, 0xb4, 0x93, 0x4f, 0xba, 0x0e, 0x6b, 0x67, 0xa3, 0x20, 0x9e, 0xce, 0xee, 0x73, 0xd8,
	0x38, 0xf5, 0xbc, 0x57, 0xe2, 0x56, 0xfa, 0xd3, 0xb9, 0x9d, 0xce, 0x7d, 0x29, 0x37, 0xf7, 0x1f,
	0x01, 0xc9, 0x2e, 0xc6, 0xee, 0x1d, 0xc0, 0x3a, 0x17, 0xae, 0xf4, 0xb8, 0xe7, 0xf8, 0x26, 0xa4,
	0xd3, 0x56, 0xed, 0x1a, 0xc2, 0x98, 0x40, 0x3f, 0x80, 0x5a, 0x8f, 0x4d, 0x46, 0x5c, 0xa4, 0x77,
	0x6d, 0xd9, 0xd4, 0x93, 0xbf, 0x00, 0xca, 0xe7, 0xd2, 0xe3, 0x84, 0x41, 0x25, 0x63, 0xd6, 0xa4,
	0x73, 0xac, 0xdf, 0xc9, 0xf9, 0xe7, 0xc3, 0xda, 0x2a, 0x88, 0xe0, 0x9e, 0x77, 0x7f, 0xfc, 0xe3,
	0xcf, 0x5f, 0xee, 0x6d, 0x52, 0xd2, 0x55, 0x4b, 0xba, 0x32, 0xe0, 0xc2, 0xc1, 0x73, 0xfc, 0xb0,
	0xf4, 0x8c, 0x7c, 0x0c, 0x2b, 0x3d, 0x36, 0x21, 0x75, 0x43, 0x30, 0xf5, 0x4b, 0x6b, 0x23, 0x83,
	0x20, 0x55, 0x53, 0x53, 0xd5, 0xe8, 0xaa, 0xa1, 0x0a, 0xd8, 0x44, 0x31, 0xf4, 0xe0, 0x01, 0x9a,
	0x3c, 0x69, 0x9a, 0x9c, 0xfc, 0x4b, 0x62, 0xb5, 0x66, 0x50, 0x64, 0xeb, 0x68, 0x36, 0x42, 0xd7,
	0x0c, 0x9b, 0x67, 0xc2, 0x8a, 0xf1, 0x0a, 0x1e, 0x26, 0x66, 0x4e, 0x30, 0x79, 0xe6, 0xcd, 0xb0,
	0xda, 0xb3, 0x30, 0x92, 0x6e, 0x69, 0xd2, 0x06, 0xad, 0x19, 0xd2, 0x3b, 0x8c, 0x2b, 0xd6, 0x11,
	0xd4, 0xf2, 0xf6, 0x4b, 0xb6, 0x0d, 0x49, 0xa1, 0x9d, 0x5b, 0x3b, 0xc5, 0x41, 0xd4, 0xd9, 0xd3,
	0x3a, 0x16, 0x6d, 0x19, 0x9d, 0x64, 0xa0, 0xd0, 0xb6, 0x95, 0xdc, 0xef, 0x25, 0xd8, 0x5e, 0xe0,
	0x9f, 0xe4, 0xd0, 0xf0, 0xff, 0xbb, 0xbb, 0x5b, 0x47, 0x4b, 0xac, 0xc4, 0xb2, 0xba, 0xba, 0xac,
	0x23, 0xfa, 0xc4, 0x94, 0xe5, 0x9b, 0x14, 0xa7, 0xf8, 0x71, 0x50, 0x55, 0x72, 0xa8, 0x66, 0x3d,
	0x98, 0x6c, 0xa5, 0x67, 0x35, 0xeb, 0xe8, 0x96, 0x55, 0x14, 0x42, 0xdd, 0xb7, 0xb4, 0x6e, 0x87,
	0x36, 0xd2, 0xb3, 0x1c, 0xca, 0x89, 0x63, 0xcc, 0x5e, 0xc9, 0xf8, 0xb0, 0x96, 0x73, 0x3b, 0x82,
	0x64, 0x45, 0x9e, 0x6c, 0x6d, 0x17, 0xc6, 0x50, 0xe9, 0x91, 0x56, 0xda, 0xa2, 0x4d, 0xa3, 0xc4,
	0xcd, 0x22, 0xdc, 0x99, 0x92, 0xfa, 0x16, 0xea, 0xb3, 0xbf, 0xeb, 0x92, 0x83, 0x2e, 0xfc, 0xbd,
	0x67, 0xed, 0xa7, 0x96, 0x77, 0xe9, 0xf7, 0x05, 0xf7, 0xe6, 0xdd, 0x8c, 0xb6, 0xb5, 0x68, 0x9d,
	0x56, 0x8c, 0xe8, 0x8d, 0xe2, 0x51, 0x5a, 0xbf, 0x96, 0x60, 0x77, 0xa1, 0xe9, 0x2e, 0xbe, 0x62,
	0xcf, 0x4d, 0x70, 0x29, 0xdb, 0xa6, 0xcf, 0x74, 0x0d, 0x4f, 0x08, 0xcd, 0xdf, 0xb8, 0xac, 0x4b,
	0x06, 0x89, 0xea, 0x4f, 0x25, 0xb0, 0x16, 0x14, 0x75, 0x90, 0x2b, 0xea, 0x9f, 0x6d, 0xdb, 0x6a,
	0xe0, 0x49, 0xe4, 0x4c, 0xf4, 0x1d, 0x5d, 0xc8, 0x01, 0x5d, 0xa2, 0x10, 0xd5, 0xa3, 0xaf, 0x01,
	0xa6, 0x36, 0x4a, 0x36, 0x0d, 0xe3, 0x9c, 0x0b, 0x5b, 0x9d, 0xf9, 0x00, 0xea, 0xed, 0x68, 0xbd,
	0x36, 0xdd, 0x48, 0xee, 0xb4, 0x0e, 0x77, 0x99, 0xe7, 0x19, 0xaf, 0xa8, 0x5c, 0x72, 0xe1, 0xa1,
	0xd5, 0x26, 0x0e, 0x94, 0x77, 0xde, 0xe2, 0x7d, 0x58, 0x9a, 0xb7, 0x49, 0x48, 0xea, 0x66, 0x2a,
	0xa5, 0x1b, 0x71, 0xe1, 0x5d, 0xdf, 0xd7, 0xff, 0x23, 0xbc, 0xfb, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x75, 0xe4, 0x24, 0x60, 0x99, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeClient is the client API for Node service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeClient interface {
	OpenChannel(ctx context.Context, in *OpenChannelRequest, opts ...grpc.CallOption) (*OpenChannelResponse, error)
	Pay(ctx context.Context, in *PayRequest, opts ...grpc.CallOption) (*PayResponse, error)
	Deposit(ctx context.Context, in *DepositRequest, opts ...grpc.CallOption) (*DepositResponse, error)
	Withdraw(ctx context.Context, in *WithdrawRequest, opts ...grpc.CallOption) (*WithdrawResponse, error)
	ChannelBalance(ctx context.Context, in *ChannelBalanceRequest, opts ...grpc.CallOption) (*ChannelBalanceResponse, error)
	InstallChannelScriptPackage(ctx context.Context, in *InstallChannelScriptPackageRequest, opts ...grpc.CallOption) (*InstallChannelScriptPackageResponse, error)
	DeployModule(ctx context.Context, in *DeployModuleRequest, opts ...grpc.CallOption) (*DeployModuleResponse, error)
	ExecuteScript(ctx context.Context, in *ExecuteScriptRequest, opts ...grpc.CallOption) (*ExecuteScriptResponse, error)
	QueryTransaction(ctx context.Context, in *QueryTransactionQuest, opts ...grpc.CallOption) (*sgtypes.SignedChannelTransaction, error)
	GetChannelTransactionProposal(ctx context.Context, in *ChannelBalanceRequest, opts ...grpc.CallOption) (*GetChannelTransactionProposalResponse, error)
	ChannelTransactionProposal(ctx context.Context, in *ChannelTransactionProposalRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	AddInvoice(ctx context.Context, in *AddInvoiceRequest, opts ...grpc.CallOption) (*AddInvoiceResponse, error)
	SendPayment(ctx context.Context, in *PaymentRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type nodeClient struct {
	cc *grpc.ClientConn
}

func NewNodeClient(cc *grpc.ClientConn) NodeClient {
	return &nodeClient{cc}
}

func (c *nodeClient) OpenChannel(ctx context.Context, in *OpenChannelRequest, opts ...grpc.CallOption) (*OpenChannelResponse, error) {
	out := new(OpenChannelResponse)
	err := c.cc.Invoke(ctx, "/node.Node/OpenChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) Pay(ctx context.Context, in *PayRequest, opts ...grpc.CallOption) (*PayResponse, error) {
	out := new(PayResponse)
	err := c.cc.Invoke(ctx, "/node.Node/Pay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) Deposit(ctx context.Context, in *DepositRequest, opts ...grpc.CallOption) (*DepositResponse, error) {
	out := new(DepositResponse)
	err := c.cc.Invoke(ctx, "/node.Node/Deposit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) Withdraw(ctx context.Context, in *WithdrawRequest, opts ...grpc.CallOption) (*WithdrawResponse, error) {
	out := new(WithdrawResponse)
	err := c.cc.Invoke(ctx, "/node.Node/Withdraw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) ChannelBalance(ctx context.Context, in *ChannelBalanceRequest, opts ...grpc.CallOption) (*ChannelBalanceResponse, error) {
	out := new(ChannelBalanceResponse)
	err := c.cc.Invoke(ctx, "/node.Node/ChannelBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) InstallChannelScriptPackage(ctx context.Context, in *InstallChannelScriptPackageRequest, opts ...grpc.CallOption) (*InstallChannelScriptPackageResponse, error) {
	out := new(InstallChannelScriptPackageResponse)
	err := c.cc.Invoke(ctx, "/node.Node/InstallChannelScriptPackage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) DeployModule(ctx context.Context, in *DeployModuleRequest, opts ...grpc.CallOption) (*DeployModuleResponse, error) {
	out := new(DeployModuleResponse)
	err := c.cc.Invoke(ctx, "/node.Node/DeployModule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) ExecuteScript(ctx context.Context, in *ExecuteScriptRequest, opts ...grpc.CallOption) (*ExecuteScriptResponse, error) {
	out := new(ExecuteScriptResponse)
	err := c.cc.Invoke(ctx, "/node.Node/ExecuteScript", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) QueryTransaction(ctx context.Context, in *QueryTransactionQuest, opts ...grpc.CallOption) (*sgtypes.SignedChannelTransaction, error) {
	out := new(sgtypes.SignedChannelTransaction)
	err := c.cc.Invoke(ctx, "/node.Node/QueryTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) GetChannelTransactionProposal(ctx context.Context, in *ChannelBalanceRequest, opts ...grpc.CallOption) (*GetChannelTransactionProposalResponse, error) {
	out := new(GetChannelTransactionProposalResponse)
	err := c.cc.Invoke(ctx, "/node.Node/GetChannelTransactionProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) ChannelTransactionProposal(ctx context.Context, in *ChannelTransactionProposalRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/node.Node/ChannelTransactionProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) AddInvoice(ctx context.Context, in *AddInvoiceRequest, opts ...grpc.CallOption) (*AddInvoiceResponse, error) {
	out := new(AddInvoiceResponse)
	err := c.cc.Invoke(ctx, "/node.Node/AddInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) SendPayment(ctx context.Context, in *PaymentRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/node.Node/SendPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeServer is the server API for Node service.
type NodeServer interface {
	OpenChannel(context.Context, *OpenChannelRequest) (*OpenChannelResponse, error)
	Pay(context.Context, *PayRequest) (*PayResponse, error)
	Deposit(context.Context, *DepositRequest) (*DepositResponse, error)
	Withdraw(context.Context, *WithdrawRequest) (*WithdrawResponse, error)
	ChannelBalance(context.Context, *ChannelBalanceRequest) (*ChannelBalanceResponse, error)
	InstallChannelScriptPackage(context.Context, *InstallChannelScriptPackageRequest) (*InstallChannelScriptPackageResponse, error)
	DeployModule(context.Context, *DeployModuleRequest) (*DeployModuleResponse, error)
	ExecuteScript(context.Context, *ExecuteScriptRequest) (*ExecuteScriptResponse, error)
	QueryTransaction(context.Context, *QueryTransactionQuest) (*sgtypes.SignedChannelTransaction, error)
	GetChannelTransactionProposal(context.Context, *ChannelBalanceRequest) (*GetChannelTransactionProposalResponse, error)
	ChannelTransactionProposal(context.Context, *ChannelTransactionProposalRequest) (*EmptyResponse, error)
	AddInvoice(context.Context, *AddInvoiceRequest) (*AddInvoiceResponse, error)
	SendPayment(context.Context, *PaymentRequest) (*EmptyResponse, error)
}

// UnimplementedNodeServer can be embedded to have forward compatible implementations.
type UnimplementedNodeServer struct {
}

func (*UnimplementedNodeServer) OpenChannel(ctx context.Context, req *OpenChannelRequest) (*OpenChannelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenChannel not implemented")
}
func (*UnimplementedNodeServer) Pay(ctx context.Context, req *PayRequest) (*PayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Pay not implemented")
}
func (*UnimplementedNodeServer) Deposit(ctx context.Context, req *DepositRequest) (*DepositResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Deposit not implemented")
}
func (*UnimplementedNodeServer) Withdraw(ctx context.Context, req *WithdrawRequest) (*WithdrawResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Withdraw not implemented")
}
func (*UnimplementedNodeServer) ChannelBalance(ctx context.Context, req *ChannelBalanceRequest) (*ChannelBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelBalance not implemented")
}
func (*UnimplementedNodeServer) InstallChannelScriptPackage(ctx context.Context, req *InstallChannelScriptPackageRequest) (*InstallChannelScriptPackageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InstallChannelScriptPackage not implemented")
}
func (*UnimplementedNodeServer) DeployModule(ctx context.Context, req *DeployModuleRequest) (*DeployModuleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeployModule not implemented")
}
func (*UnimplementedNodeServer) ExecuteScript(ctx context.Context, req *ExecuteScriptRequest) (*ExecuteScriptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteScript not implemented")
}
func (*UnimplementedNodeServer) QueryTransaction(ctx context.Context, req *QueryTransactionQuest) (*sgtypes.SignedChannelTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryTransaction not implemented")
}
func (*UnimplementedNodeServer) GetChannelTransactionProposal(ctx context.Context, req *ChannelBalanceRequest) (*GetChannelTransactionProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannelTransactionProposal not implemented")
}
func (*UnimplementedNodeServer) ChannelTransactionProposal(ctx context.Context, req *ChannelTransactionProposalRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelTransactionProposal not implemented")
}
func (*UnimplementedNodeServer) AddInvoice(ctx context.Context, req *AddInvoiceRequest) (*AddInvoiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddInvoice not implemented")
}
func (*UnimplementedNodeServer) SendPayment(ctx context.Context, req *PaymentRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendPayment not implemented")
}

func RegisterNodeServer(s *grpc.Server, srv NodeServer) {
	s.RegisterService(&_Node_serviceDesc, srv)
}

func _Node_OpenChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).OpenChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/node.Node/OpenChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).OpenChannel(ctx, req.(*OpenChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_Pay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).Pay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/node.Node/Pay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).Pay(ctx, req.(*PayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_Deposit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DepositRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).Deposit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/node.Node/Deposit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).Deposit(ctx, req.(*DepositRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_Withdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).Withdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/node.Node/Withdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).Withdraw(ctx, req.(*WithdrawRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_ChannelBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).ChannelBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/node.Node/ChannelBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).ChannelBalance(ctx, req.(*ChannelBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_InstallChannelScriptPackage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstallChannelScriptPackageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).InstallChannelScriptPackage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/node.Node/InstallChannelScriptPackage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).InstallChannelScriptPackage(ctx, req.(*InstallChannelScriptPackageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_DeployModule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeployModuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).DeployModule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/node.Node/DeployModule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).DeployModule(ctx, req.(*DeployModuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_ExecuteScript_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteScriptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).ExecuteScript(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/node.Node/ExecuteScript",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).ExecuteScript(ctx, req.(*ExecuteScriptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_QueryTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryTransactionQuest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).QueryTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/node.Node/QueryTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).QueryTransaction(ctx, req.(*QueryTransactionQuest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_GetChannelTransactionProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).GetChannelTransactionProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/node.Node/GetChannelTransactionProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).GetChannelTransactionProposal(ctx, req.(*ChannelBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_ChannelTransactionProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelTransactionProposalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).ChannelTransactionProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/node.Node/ChannelTransactionProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).ChannelTransactionProposal(ctx, req.(*ChannelTransactionProposalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_AddInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInvoiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).AddInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/node.Node/AddInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).AddInvoice(ctx, req.(*AddInvoiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_SendPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).SendPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/node.Node/SendPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).SendPayment(ctx, req.(*PaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Node_serviceDesc = grpc.ServiceDesc{
	ServiceName: "node.Node",
	HandlerType: (*NodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OpenChannel",
			Handler:    _Node_OpenChannel_Handler,
		},
		{
			MethodName: "Pay",
			Handler:    _Node_Pay_Handler,
		},
		{
			MethodName: "Deposit",
			Handler:    _Node_Deposit_Handler,
		},
		{
			MethodName: "Withdraw",
			Handler:    _Node_Withdraw_Handler,
		},
		{
			MethodName: "ChannelBalance",
			Handler:    _Node_ChannelBalance_Handler,
		},
		{
			MethodName: "InstallChannelScriptPackage",
			Handler:    _Node_InstallChannelScriptPackage_Handler,
		},
		{
			MethodName: "DeployModule",
			Handler:    _Node_DeployModule_Handler,
		},
		{
			MethodName: "ExecuteScript",
			Handler:    _Node_ExecuteScript_Handler,
		},
		{
			MethodName: "QueryTransaction",
			Handler:    _Node_QueryTransaction_Handler,
		},
		{
			MethodName: "GetChannelTransactionProposal",
			Handler:    _Node_GetChannelTransactionProposal_Handler,
		},
		{
			MethodName: "ChannelTransactionProposal",
			Handler:    _Node_ChannelTransactionProposal_Handler,
		},
		{
			MethodName: "AddInvoice",
			Handler:    _Node_AddInvoice_Handler,
		},
		{
			MethodName: "SendPayment",
			Handler:    _Node_SendPayment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "node.proto",
}
